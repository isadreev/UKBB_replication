import os
import json

# Setup directories
os.makedirs("data", exist_ok=True)
os.makedirs(os.path.join("data", "sim_data"), exist_ok=True)
os.makedirs("results", exist_ok=True)
os.makedirs('job_reports', exist_ok=True)

rule all:
  input:
    "docs/simulations.html",
    "docs/umvcue.html",
    "docs/replication_report.html"

SIMS=list(range(1,1213))
chunk_size=20000
# Create simulated data
rule sim_data:
  output:
    "data/sim_data/out{SIMS}.rdata"
  shell:
    "Rscript scripts/sim_overlap.r {chunk_size} {wildcards.SIMS} data"

# Aggregate the results
rule aggregate:
  input:
    expand("data/sim_data/out{SIMS}.rdata", SIMS = SIMS)
  output:
    "data/sim_overlap_nr.rdata"
  shell:
    "Rscript scripts/sim_aggregate.r data"


# Do the replication simulations
rule umvcue:
  input:
    "docs/umvcue.rmd"
  output:
    "docs/umvcue.html"
  shell:
    "cd docs; Rscript -e \"rmarkdown::render('umvcue.rmd', output_format='all')\""

rule replication:
  output:
    "results/replication.rdata",
  shell:
    "Rscript scripts/replication.r results"

rule replication_report:
  input:
    "docs/replication_report.rmd",
    "results/replication.rdata"
  output:
    "docs/replication_report.html"
  shell:
    "cd docs; Rscript -e \"rmarkdown::render('replication_report.rmd', output_format='all')\" ../results"


# Collapse all the results into one file
rule collapse:
  input:
    "docs/simulations.rmd",
    "data/sim_overlap_nr.rdata",
  output:
    "docs/simulations.html"
  shell:
    "cd docs; Rscript -e \"rmarkdown::render('simulations.rmd', output_format='all')\" ../data"
